# nginx conf.d file

log_subrequest on;

# https://nginx.org/en/docs/http/ngx_http_core_module.html#variables
# https://nginx.org/en/docs/http/ngx_http_proxy_module.html#variables
# https://nginx.org/en/docs/http/ngx_http_upstream_module.html#variables
# https://nginx.org/en/docs/http/ngx_http_ssl_module.html#variables

log_format upstream '[$time_local]'
	' $server_name'
	' $remote_addr'
	' $remote_user'
	' $ssl_client_fingerprint'
	' "$request"'
	' "$http_referer"'
	' "$http_user_agent"'
	' $status'
	' $request_time'
	' $body_bytes_sent'
	' [$upstream_name]'
	' $upstream_status'
	' $upstream_response_time'
	' $upstream_response_length';

log_format upstream_json escape=json '{'
	'"b": $body_bytes_sent, '
	'"cli": "$remote_addr", '
	'"fp": "$ssl_client_fingerprint", '
	'"r": "$request", '
	'"ref": "$http_referer", '
	'"rt": $request_time, '
	'"srv": "$server_name", '
	'"st": $status, '
	'"t": "$time_local", '
	'"u": "$remote_user", '
	'"ua": "$http_user_agent", '
	'"ub": $upstream_response_length, '
	'"un": "$upstream_name", '
	'"urt": "$upstream_response_time", '
	'"ust": "$upstream_status"'
'}';

# json_analytics: from talkingpts.grafana.net/a/grafana-easystart-app/nginx

log_format json_analytics escape=json '{'
'"msec": "$msec", '                                         # request unixtime in seconds with a milliseconds resolution
'"connection": "$connection", '                             # connection serial number
'"connection_requests": "$connection_requests", '           # number of requests made in connection
'"pid": "$pid", '                                           # process pid
'"request_id": "$request_id", '                             # the unique request id
'"request_length": "$request_length", '                     # request length (including headers and body)
'"remote_addr": "$remote_addr", '                           # client IP
'"remote_user": "$remote_user", '                           # client HTTP username
'"remote_port": "$remote_port", '                           # client port
'"time_local": "$time_local", '
'"time_iso8601": "$time_iso8601", '                         # local time in the ISO 8601 standard format
'"request": "$request", '                                   # full path no arguments if the request
'"request_uri": "$request_uri", '                           # full path and arguments if the request
'"args": "$args", '                                         # args
'"status": "$status", '                                     # response status code
'"body_bytes_sent": "$body_bytes_sent", '                   # the number of body bytes exclude headers sent to a client
'"bytes_sent": "$bytes_sent", '                             # the number of bytes sent to a client
'"http_referer": "$http_referer", '                         # HTTP referer
'"http_user_agent": "$http_user_agent", '                   # user agent
'"http_x_forwarded_for": "$http_x_forwarded_for", '         # http_x_forwarded_for
'"http_host": "$http_host", '                               # the request Host: header
'"server_name": "$server_name", '                           # the name of the vhost serving the request
'"request_time": "$request_time", '                         # request processing time in seconds with msec resolution
'"upstream": "$upstream_addr", '                            # upstream backend server for proxied requests
'"upstream_cache_status": "$upstream_cache_status", '       # cache HIT/MISS where applicable
'"upstream_connect_time": "$upstream_connect_time", '       # upstream handshake time incl. TLS
'"upstream_header_time": "$upstream_header_time", '         # time spent receiving upstream headers
'"upstream_name": "$upstream_name", '                       # uws internal upstream name
'"upstream_response_time": "$upstream_response_time", '     # time spent receiving upstream body
'"upstream_response_length": "$upstream_response_length", ' # upstream response length
'"upstream_status": "$upstream_status", '                   # upstream response status
'"ssl_protocol": "$ssl_protocol", '                         # TLS protocol
'"ssl_cipher": "$ssl_cipher", '                             # TLS cipher
'"ssl_client_fingerprint": "$ssl_client_fingerprint", '     # TLS client fingerprint
'"scheme": "$scheme", '                                     # http or https
'"request_method": "$request_method", '                     # request method
'"server_protocol": "$server_protocol", '                   # request protocol, like HTTP/1.1 or HTTP/2.0
'"pipe": "$pipe", '                                         # "p" if request was pipelined, "." otherwise
'"gzip_ratio": "$gzip_ratio"'
'}';
