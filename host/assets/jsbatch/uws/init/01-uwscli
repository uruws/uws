#!/bin/sh
set -eu

#-------------------------------------------------------------------------------
# python venv

/usr/bin/python3 -m venv --upgrade --upgrade-deps /opt/uwscli
/opt/uwscli/bin/pip3 install -U -r ~uwscli/etc/requirements.txt

#-------------------------------------------------------------------------------
# umask

umask 0027

#-------------------------------------------------------------------------------
# sudoers

install -v -C -m 0640 -o root -g root ~uwscli/etc/sudoers.d/99-uwscli /etc/sudoers.d/99-uwscli

#-------------------------------------------------------------------------------
# run dirs

/uws/bin/uwscli-rundir.sh

#-------------------------------------------------------------------------------
# utils access

chmod -v 0750 ~uwscli
chown -v uwscli:uwscli ~uwscli

chmod -v  0750        ~uwscli/etc
chown -vR root:uwscli ~uwscli/etc

chmod -v  0750        ~uwscli/lib
chown -vR root:uwscli ~uwscli/lib

chmod -v  0750        ~uwscli/vendor
chown -vR root:uwscli ~uwscli/vendor

chmod -v  0550        ~uwscli/bin/*
chmod -v  0750        ~uwscli/bin
chown -vR root:uwscli ~uwscli/bin

adduser uws uwscli

#-------------------------------------------------------------------------------
# operator utils

addgroup uwsops || true

chown -v root:uwsops ~uwscli/bin/app-deploy
chown -v root:uwsops ~uwscli/bin/app-restart
chown -v root:uwsops ~uwscli/bin/app-rollin
chown -v root:uwsops ~uwscli/bin/app-scale

# operator proxy utils

chown -v root:uwsops ~uwscli/bin/proxy-*

# operator custom utils

chown -v root:uwsops ~uwscli/bin/production-*
chown -v root:uwsops ~uwscli/bin/staging-*

#-------------------------------------------------------------------------------
# internal utils

chown -v uwscli:uws ~uwscli/bin/app-autobuild

#-------------------------------------------------------------------------------
# python compile lib and vendor

umask 0022

rm -vrf ~uwscli/lib/__pycache__
python3 -m compileall ~uwscli/lib
chown -R root:uwscli ~uwscli/lib/__pycache__

find ~uwscli/vendor/ -type d -name __pycache__ -print0 | xargs -0 rm -rf
python3 -m compileall ~uwscli/vendor
find ~uwscli/vendor/ -type d -name __pycache__ -print0 | xargs -0 chown -R root:uwscli

umask 0027

#-------------------------------------------------------------------------------
# users

uws_useradd() (
	set -eu
	user_name=${1}
	user_keyid=${2:-"NOKEY"}
	# config
	user_home=/srv/home/${user_name}
	uwscli_home=/srv/home/uwscli
	sshauth_srcdir=/srv/uws/deploy/secret/cli/ssh.auth
	chatbot_sshkey=/srv/uws/deploy/secret/eks/files/chatbot/prod/config/ssh/ecdsa_id.pub
	# user
	getent passwd "${user_name}" || {
		useradd -U -m \
			-s /bin/bash \
			-c "${user_name}" \
			-d "${user_home}" \
			"${user_name}"
	}
	usermod --lock "${user_name}"
	# groups
	adduser "${user_name}" uwscli
	# profile
	chmod 0750 "${user_home}"
	install -v -C -m 0644 "${uwscli_home}/etc/user.bash_profile" "${user_home}/.bash_profile"
	# internal ssh auth keys
	sshauth_src="${sshauth_srcdir}/${user_name}/authorized_keys"
	sshauth_dst="${user_home}/.ssh/authorized_keys"
	install -v -d -m 0750 -o "${user_name}" -g "${user_name}" "$(dirname "${sshauth_dst}")"
	if test -s "${sshauth_src}"; then
		install -v -C -m 0640  -o "${user_name}" -g "${user_name}" "${sshauth_src}" "${sshauth_dst}"
	fi
	# no ssh access
	if test "X${user_keyid}" = 'XNOSSH'; then
		rm -vf "${sshauth_dst}"
	fi
	# chatbot access only
	if test "X${user_keyid}" = 'XCHATBOT'; then
		rm -vf "${sshauth_dst}"
		touch "${sshauth_dst}"
		chown -v "${user_name}:${user_name}" "${sshauth_dst}"
		chmod -v 0640 "${sshauth_dst}"
	fi
	# chatbot auth keys
	if test -s "${chatbot_sshkey}"; then
		if test -f "${sshauth_dst}"; then
			echo "${chatbot_sshkey} -> ${sshauth_dst}"
			cat "${chatbot_sshkey}" >>"${sshauth_dst}"
		fi
	fi
)

# developers
uws_useradd jeremias
uws_useradd aram
uws_useradd gabriel
uws_useradd antonio
uws_useradd ramiro
uws_useradd pablo
uws_useradd gonzalo

# keep the user but no ssh access
uws_useradd nelson NOSSH

# chatbot access only
uws_useradd martin CHATBOT

# chatbot
uws_useradd uwscbdev
uws_useradd uwscbtest

#-------------------------------------------------------------------------------
# users profile

# chatbot devel
install -v -d -m 0750 -o uwscbdev -g uwscbdev ~uwscbdev/.ssh
install -v -C -m 0600 -o uwscbdev -g uwscbdev \
	/srv/uws/deploy/secret/webapp/devel/chatbot/ssh/ecdsa_id.pub \
	~uwscbdev/.ssh/authorized_keys

# chatbot test
install -v -d -m 0750 -o uwscbtest -g uwscbtest ~uwscbtest/.ssh
install -v -C -m 0600 -o uwscbtest -g uwscbtest \
	/srv/uws/deploy/secret/eks/files/chatbot/test/config/ssh/ecdsa_id.pub \
	~uwscbtest/.ssh/authorized_keys

#-------------------------------------------------------------------------------
# admin users

addgroup uwsadm || true

# Make uws user an admin. Needed for autobuild deploys.
adduser uws uwsadm

adduser uwscli   uwsadm
adduser aram     uwsadm
adduser jeremias uwsadm

#-------------------------------------------------------------------------------
# operator users

# Make uws user an operator. Needed for autobuild deploys.
adduser uws uwsops

adduser uwscli    uwsops
adduser aram      uwsops
adduser gabriel   uwsops
adduser jeremias  uwsops
adduser nelson    uwsops
adduser gonzalo   uwsops

# chatbot
adduser uwscbdev  uwsops
adduser uwscbtest uwsops

#-------------------------------------------------------------------------------
# app groups

# app
addgroup uwsapp_app || true

adduser antonio uwsapp_app
adduser gabriel uwsapp_app
adduser nelson  uwsapp_app
adduser ramiro  uwsapp_app
adduser pablo   uwsapp_app

# apptest
addgroup uwsapp_apptest || true

adduser gabriel  uwsapp_apptest
adduser ramiro   uwsapp_apptest
adduser pablo    uwsapp_apptest

adduser uwscbdev  uwsapp_apptest
adduser uwscbtest uwsapp_apptest

# beta
addgroup uwsapp_beta || true

adduser gabriel uwsapp_beta

# cs
addgroup uwsapp_crowdsourcing || true
addgroup uwsapp_cs || true

adduser gabriel uwsapp_crowdsourcing
adduser gabriel uwsapp_cs
adduser ramiro  uwsapp_cs
adduser martin  uwsapp_cs

# infraui
###addgroup uwsapp_infra-ui || true
###adduser gabriel uwsapp_infra-ui
###adduser gonzalo uwsapp_infra-ui

# uwsapp_meteor-vanilla
addgroup uwsapp_meteor-vanilla || true

adduser uwscbdev  uwsapp_meteor-vanilla
adduser uwscbtest uwsapp_meteor-vanilla

#-------------------------------------------------------------------------------
# install crontab

crontab -u uwscli ~uwscli/etc/crontab.in

#-------------------------------------------------------------------------------
# remove old users

uws_deluser() (
	local user_name="${1}"
	deluser --remove-home "${user_name}" || true
)

exit 0
