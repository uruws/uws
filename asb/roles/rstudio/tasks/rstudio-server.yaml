---
- name: RStudio server install
  become: true
  ansible.builtin.apt:
    deb: "{{ rstudio_repo }}/{{ rstudio_server_version }}"
  tags:
    - apt
    - rstudio-apt

- name: RStudio server config
  become: true
  ansible.builtin.template:
    src: rserver.conf
    dest: /etc/rstudio/rserver.conf
    owner: root
    group: root
    mode: '0644'
  notify:
    - RStudio restart server
  tags:
    - rstudio

- name: RStudio systemd service config
  become: true
  ansible.builtin.lineinfile:
    path: /lib/systemd/system/rstudio-server.service
    backup: true
    state: present
    line: 'UMask=0002'
    insertafter: '^PIDFile='
  notify:
    - RStudio reload systemd
    - RStudio restart server
  tags:
    - rstudio

# homefs

- name: RStudio vm info
  delegate_to: localhost
  amazon.aws.ec2_instance_info:
    filters:
      "tag:Name": "{{ inventory_hostname }}"
      availability-zone: "{{ aws_zone }}"
      instance-state-name: running
  register: rstudio_vm
  tags:
    - homefs

- name: RStudio homefs vol
  delegate_to: localhost
  amazon.aws.ec2_vol:
    name: "{{ inventory_hostname }}-homefs"
    zone: "{{ aws_zone }}"
    instance: "{{ rstudio_vm.instances.0.instance_id }}"
    encrypted: true
    volume_size: 100
    volume_type: gp2
    device_name: /dev/sdf
    delete_on_termination: false
    tags: {}
  tags:
    - homefs

- name: RStudio make homefs
  become: true
  community.general.filesystem:
    dev: /dev/sdf
    fstype: ext4
    opts: -L rstudio-homefs
  tags:
    - homefs

- name: RStudio mount homefs
  become: true
  ansible.posix.mount:
    path: "{{ uws_users_homedir }}"
    src: LABEL=rstudio-homefs
    fstype: ext4
    state: mounted
  tags:
    - homefs
