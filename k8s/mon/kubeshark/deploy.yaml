---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubeshark
  namespace: mon
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: kubeshark
  replicas: 1
  revisionHistoryLimit: 2
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubeshark
    spec:
      terminationGracePeriodSeconds: 3
      containers:
        - image: 789470191893.dkr.ecr.us-east-1.amazonaws.com/uws:mon-${K8S_IMAGE}-${VERSION}
          imagePullPolicy: IfNotPresent
          name: kubeshark
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            runAsUser: 1001
            runAsGroup: 1001
          ports:
            - containerPort: 8899
              name: kubeshark
          env:
            - name: USER
              value: "uws"
            - name: HOME
              value: "/home/uws"
          envFrom:
            - configMapRef:
                name: cluster-env
          workingDir: /home/uws
          volumeMounts:
            - name: aws-auth
              mountPath: "/home/uws/.aws"
              readOnly: true
            - name: cluster-auth
              mountPath: "/home/uws/.kube/eksctl/clusters"
              readOnly: true
          resources:
            requests:
              cpu: 1m
              memory: 50Mi
            limits:
              cpu: 1m
              memory: 50Mi
          command:
            - /usr/local/bin/kubeshark-start.sh
            - ${UWS_CLUSTER}
            - tap
            - --storagelimit=500MB
            - --proxy-hub-port=80
            - ${KUBESHARK_NAMESPACES}
      volumes:
        - name: aws-auth
          secret:
            secretName: aws-auth
        - name: cluster-auth
          secret:
            secretName: cluster-auth
