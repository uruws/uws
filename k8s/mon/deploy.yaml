---
apiVersion: v1
kind: Service
metadata:
  name: k8s
  namespace: mon
  labels:
    app.kubernetes.io/name: k8s
spec:
  ports:
  - port: 2800
    name: k8smon
  selector:
    app.kubernetes.io/name: k8s
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s
  namespace: mon
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: k8s
  replicas: 1
  revisionHistoryLimit: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: k8s
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - image: 789470191893.dkr.ecr.us-east-1.amazonaws.com/uws:mon-k8s-${VERSION}
          imagePullPolicy: IfNotPresent
          name: k8s
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 3000
            runAsGroup: 3000
          ports:
            - containerPort: 2800
              name: k8smon
          volumeMounts:
            - name: tmpdir
              mountPath: "/tmp"
          #~ resources:
            #~ requests:
              #~ memory: 100Mi
            #~ limits:
              #~ memory: 100Mi
          command:
            - /usr/local/bin/k8smon
          readinessProbe:
            httpGet:
              path: /_/ping
              port: 2800
            initialDelaySeconds: 5
            periodSeconds: 15
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 1
          livenessProbe:
            httpGet:
              path: /_/healthz
              port: 2800
            periodSeconds: 15
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
      volumes:
        - name: tmpdir
          emptyDir: {}
