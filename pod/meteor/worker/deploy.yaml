---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: meteor
  namespace: worker
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: meteor-worker
  replicas: ${APP_REPLICAS}
  revisionHistoryLimit: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 50%
      maxSurge: 50%
  template:
    metadata:
      labels:
        app.kubernetes.io/name: meteor-worker
    spec:
      terminationGracePeriodSeconds: 30
      containers:
        - image: 789470191893.dkr.ecr.${AWS_REGION}.amazonaws.com/uws:meteor-app-${METEOR_APP}
          imagePullPolicy: IfNotPresent
          name: meteor-worker
          ports:
            - containerPort: 3000
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 3000
            runAsGroup: 3000
          volumeMounts:
            - name: appenv
              mountPath: "/run/meteor"
              readOnly: true
            - name: app-tmpdir
              mountPath: "/opt/app/bundle/tmp"
            - name: tmpdir
              mountPath: "/tmp"
          env:
            - name: PORT
              value: "3000"
            - name: METEOR_POLLING_INTERVAL_MS
              value: "300"
            - name: METEOR_POLLING_THROTTLE_MS
              value: "50"
            - name: NODE_OPTIONS
              value: "--max-old-space-size=${METEOR_WORKER_MEMORY}"
          resources:
            requests:
              cpu: ${METEOR_WORKER_CPU}m
              memory: ${METEOR_WORKER_MEMORY}Mi
            limits:
              cpu: ${METEOR_WORKER_CPU}m
              memory: ${METEOR_WORKER_MEMORY}Mi
          readinessProbe:
            exec:
              command:
                - node
                - --version
            initialDelaySeconds: 5
            periodSeconds: 15
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
      volumes:
        - name: appenv
          secret:
            secretName: meteor-app-env
        - name: app-tmpdir
          emptyDir: {}
        - name: tmpdir
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: meteor
  namespace: worker
spec:
  ports:
    - port: 3000
      targetPort: 3000
      protocol: TCP
  selector:
    app.kubernetes.io/name: meteor-worker
---
apiVersion: v1
kind: Service
metadata:
  name: meteor1
  namespace: worker
spec:
  ports:
    - port: 3000
      targetPort: 3000
      protocol: TCP
  selector:
    app.kubernetes.io/name: meteor-worker
---
apiVersion: v1
kind: Service
metadata:
  name: meteor2
  namespace: worker
spec:
  ports:
    - port: 3000
      targetPort: 3000
      protocol: TCP
  selector:
    app.kubernetes.io/name: meteor-worker
---
apiVersion: v1
kind: Service
metadata:
  name: meteor3
  namespace: worker
spec:
  ports:
    - port: 3000
      targetPort: 3000
      protocol: TCP
  selector:
    app.kubernetes.io/name: meteor-worker
---
apiVersion: v1
kind: Service
metadata:
  name: meteor4
  namespace: worker
spec:
  ports:
    - port: 3000
      targetPort: 3000
      protocol: TCP
  selector:
    app.kubernetes.io/name: meteor-worker
---
apiVersion: v1
kind: Service
metadata:
  name: meteor5
  namespace: worker
spec:
  ports:
    - port: 3000
      targetPort: 3000
      protocol: TCP
  selector:
    app.kubernetes.io/name: meteor-worker
---
apiVersion: v1
kind: Service
metadata:
  name: meteor6
  namespace: worker
spec:
  ports:
    - port: 3000
      targetPort: 3000
      protocol: TCP
  selector:
    app.kubernetes.io/name: meteor-worker
---
apiVersion: v1
kind: Service
metadata:
  name: meteor7
  namespace: worker
spec:
  ports:
    - port: 3000
      targetPort: 3000
      protocol: TCP
  selector:
    app.kubernetes.io/name: meteor-worker
---
apiVersion: v1
kind: Service
metadata:
  name: meteor8
  namespace: worker
spec:
  ports:
    - port: 3000
      targetPort: 3000
      protocol: TCP
  selector:
    app.kubernetes.io/name: meteor-worker
---
apiVersion: v1
kind: Service
metadata:
  name: meteor9
  namespace: worker
spec:
  ports:
    - port: 3000
      targetPort: 3000
      protocol: TCP
  selector:
    app.kubernetes.io/name: meteor-worker
