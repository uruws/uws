#~ ---
#~ apiVersion: autoscaling/v2beta2
#~ kind: HorizontalPodAutoscaler
#~ metadata:
  #~ name: meteor-hpa
  #~ namespace: cs
#~ spec:
  #~ scaleTargetRef:
    #~ apiVersion: apps/v1
    #~ kind: Deployment
    #~ name: meteor
  #~ minReplicas: 10
  #~ maxReplicas: 100
  #~ metrics:
  #~ - type: Resource
    #~ resource:
      #~ name: cpu
      #~ target:
        #~ type: Utilization
        #~ averageUtilization: 75
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: meteor
  namespace: cs
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: meteor
  replicas: 50
  revisionHistoryLimit: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 50%
      maxSurge: 50%
  template:
    metadata:
      labels:
        app.kubernetes.io/name: meteor
    spec:
      terminationGracePeriodSeconds: 60
      containers:
        - image: 789470191893.dkr.ecr.${AWS_REGION}.amazonaws.com/uws:meteor-crowdsourcing-${METEOR_APP}
          imagePullPolicy: IfNotPresent
          name: meteor
          ports:
            - containerPort: 3000
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 3000
            runAsGroup: 3000
          volumeMounts:
            - name: appenv
              mountPath: "/run/meteor"
              readOnly: true
          env:
            - name: PORT
              value: "3000"
            - name: NODE_OPTIONS
              value: "--max-old-space-size=1600"
          resources:
            requests:
              cpu: 400m
              memory: 1600Mi
            limits:
              cpu: 400m
              memory: 1600Mi
          readinessProbe:
            exec:
              command:
                - node
                - --version
            initialDelaySeconds: 30
            periodSeconds: 15
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
      volumes:
        - name: appenv
          secret:
            secretName: appenv
---
apiVersion: v1
kind: Service
metadata:
  name: meteor
  namespace: cs
spec:
  ports:
    - port: 3000
      targetPort: 3000
      protocol: TCP
  selector:
    app.kubernetes.io/name: meteor
